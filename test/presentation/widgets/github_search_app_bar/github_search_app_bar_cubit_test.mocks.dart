// Mocks generated by Mockito 5.4.2 from annotations
// in github_search_app/test/presentation/widgets/github_search_app_bar/github_search_app_bar_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:github_search_app/domain/locale/service/locale_service.dart'
    as _i7;
import 'package:github_search_app/domain/use_case/locale/get_locale_use_case.dart'
    as _i2;
import 'package:github_search_app/domain/use_case/locale/notify_locale_changed_stream_use_case.dart'
    as _i8;
import 'package:github_search_app/domain/use_case/locale/save_locale_use_case.dart'
    as _i5;
import 'package:github_search_app/domain/use_case/locale/subscribe_locale_changed_stream_use_case.dart'
    as _i6;
import 'package:github_search_app/style/locales.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GetLocaleUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetLocaleUseCase extends _i1.Mock implements _i2.GetLocaleUseCase {
  MockGetLocaleUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.AppLocale> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i3.Future<_i4.AppLocale>.value(_i4.AppLocale.pl),
      ) as _i3.Future<_i4.AppLocale>);
}

/// A class which mocks [SaveLocaleUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveLocaleUseCase extends _i1.Mock implements _i5.SaveLocaleUseCase {
  MockSaveLocaleUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> call(_i4.AppLocale? locale) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [locale],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [SubscribeLocaleChangedStreamUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSubscribeLocaleChangedStreamUseCase extends _i1.Mock
    implements _i6.SubscribeLocaleChangedStreamUseCase {
  MockSubscribeLocaleChangedStreamUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i7.LocaleEvent> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i3.Stream<_i7.LocaleEvent>.empty(),
      ) as _i3.Stream<_i7.LocaleEvent>);
}

/// A class which mocks [NotifyLocaleChangedStreamUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotifyLocaleChangedStreamUseCase extends _i1.Mock
    implements _i8.NotifyLocaleChangedStreamUseCase {
  MockNotifyLocaleChangedStreamUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void call() => super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
